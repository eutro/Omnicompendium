configurations {
    shade
    compile.extendsFrom shade
}

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {
    maven {
        name = "eclipse"
        url = "https://repo.eclipse.org/content/groups/releases/"
    }
}

configurations {
    shade
    compileOnly.extendsFrom shade
}

sourceSets {
    main.compileClasspath += configurations.shade
    main.runtimeClasspath += configurations.shade
    test.compileClasspath += configurations.shade
    test.runtimeClasspath += configurations.shade
}

dependencies {
    shade 'org.eclipse.jgit:org.eclipse.jgit:5.7.0.202003110725-r'

    shade 'com.atlassian.commonmark:commonmark:0.15.1'
    shade 'com.atlassian.commonmark:commonmark-ext-gfm-tables:0.15.1'
    shade 'com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:0.15.1'
}

reobf {
    jar {
        extraLines pkgShade('org/eclipse')
        extraLines pkgShade('org/bouncycastle')
        extraLines pkgShade('org/slf4j')
        extraLines pkgShade('com/jcraft')
        extraLines pkgShade('com/googlecode')

        extraLines pkgShade('com/atlassian')
    }
}

def pkgShade(String pkg) {
    return "PK: ${pkg} ${group}/${archivesBaseName}/shade/${pkg}"
}

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
